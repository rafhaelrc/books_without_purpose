/*
   Project books_without_purpose

   Gradle build file for JaCaMo Applications
   November 04, 2021 - 14:34:24
*/

plugins {
    id "java" 
    id "eclipse"
}

defaultTasks 'run'

version '1.0'
group   'org.jacamo'


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(15)
    }
}


repositories {
    mavenCentral()
    maven { url "https://raw.githubusercontent.com/jacamo-lang/mvn-repo/master" }
    maven { url "https://repo.gradle.org/gradle/libs-releases-local" }
    //maven { url 'https://jitpack.io' }
    
    flatDir {
       dirs 'lib'
    }
}

dependencies {
	//classpath group: 'commons-codec', name: 'commons-codec', version: '1.2'
	//implementation 'com.github.artificial-institutions:sai:master-SNAPSHOT'
    implementation ('org.jacamo:jacamo:1.1-SNAPSHOT')
}

sourceSets {
    main {
        java {
            srcDir 'src/env'
            srcDir 'src/agt'
            srcDir 'src/org'
            srcDir 'src/java'
        }
        resources {
            srcDir 'src/resources'
        }
    }
}
//task run (type: JavaExec, dependsOn: 'classes') {
task run (type: JavaExec, dependsOn: 'classes') {
  	group       ' JaCaMo'
    description 'runs the JaCaMo application'
    doFirst {
       mkdir 'log'
    }
    mainClass = 'jacamo.infra.JaCaMoLauncher'
    //args 'books_without_purpose.jcm'
    args 'books_without_purpose.jcm'
    classpath sourceSets.main.runtimeClasspath
}

task uberJar(type: Jar, dependsOn: 'classes') {
    group      ' JaCaMo'
    description 'creates a single runnable jar file with all dependencies'
	duplicatesStrategy 'exclude'

    manifest {
        attributes 'Main-Class': 'jacamo.infra.JaCaMoLauncher'
    }
    baseName = 'jacamo-books' // the name must start with jacamo so that jacamo...jar is found in the classpath
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    from (project.projectDir.absolutePath) {
        include '**/*.asl'
        include '**/*.xml'
        include '**/*.jcm'
        include '*.properties'
        include '**/*.sai'
        include 'src/org/sai_specifications/*.sai'
    }
    
    from (project.buildDir.absolutePath + '/jcm') {
        include '**/*'
    }
    
    with jar

    doFirst {
        copy {
            from 'books_without_purpose.jcm'
            rename 'books_without_purpose.jcm','default.jcm'
            into project.buildDir.absolutePath + '/jcm'
        }
    }
}


clean {
    delete 'bin'
    delete 'build'
    delete 'log'
}